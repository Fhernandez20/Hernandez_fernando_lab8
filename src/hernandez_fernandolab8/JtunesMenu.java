/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hernandez_fernandolab8;

import javax.swing.JOptionPane;

/**
 *
 * @author fdhg0
 */
public class JtunesMenu extends javax.swing.JFrame {

    private Jtunes jtunes;

    /**
     * Creates new form JtunesMenu
     */
    public JtunesMenu(Jtunes jtunes) {
        this.jtunes = jtunes;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addSongboton = new javax.swing.JButton();
        search_bar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchedSongs = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        reviewboton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        allsongsboton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("JTUNES");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("ADD SONG");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("SEARCH SONG:");

        addSongboton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addSongboton.setText("GO");
        addSongboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongbotonActionPerformed(evt);
            }
        });

        search_bar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_barKeyReleased(evt);
            }
        });

        searchedSongs.setColumns(20);
        searchedSongs.setRows(5);
        jScrollPane1.setViewportView(searchedSongs);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("SONG RATINGS");

        reviewboton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        reviewboton.setText("GO");
        reviewboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewbotonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("ALL SONGS");

        allsongsboton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        allsongsboton.setText("GO");
        allsongsboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allsongsbotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(search_bar, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(addSongboton))
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(reviewboton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(allsongsboton))
                                    .addComponent(jLabel5))))))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_bar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addSongboton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reviewboton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(allsongsboton)
                        .addGap(93, 93, 93))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSongbotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongbotonActionPerformed
        addSong add = new addSong(jtunes);
        add.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addSongbotonActionPerformed

    private void search_barKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_barKeyReleased
        // TODO add your handling code here:
        String searchText = search_bar.getText();

        if (!searchText.isEmpty()) {
            String resultados = "";
            boolean cancionEncontrada = false;
            try {
                for (int i = 0; i < jtunes.getnumCanciones(); i++) {
                    Song cancion = jtunes.getCanciones()[i];
                    if (Integer.toString(cancion.getCode()).contains(searchText)) {
                        resultados += "Code: " + cancion.getCode() + "\n"
                                + "Name: " + cancion.getNombre() + "\n"
                                + "Price: " + cancion.getPrecio() + "\n"
                                + "Rating: " + cancion.getRating() + "\n\n";
                        cancionEncontrada = true;
                    }
                }
            } catch (NumberFormatException e) {
                resultados = "Favor ingrese un valor valido";
            }
            if (cancionEncontrada) {
                searchedSongs.setText(resultados);
            } else {
                searchedSongs.setText("No se encontraron canciones con códigos que contienen: " + searchText);
            }
        } else {
            searchedSongs.setText("");
        }
    }//GEN-LAST:event_search_barKeyReleased

    private void reviewbotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewbotonActionPerformed

        String inputCode = JOptionPane.showInputDialog(this, "Ingrese el código de la canción para modificar el rating:", "Modificar Rating", JOptionPane.PLAIN_MESSAGE);

        if (inputCode != null && !inputCode.trim().isEmpty()) {
            try {
                int code = Integer.parseInt(inputCode.trim());

                Song song = jtunes.searchCode(code);

                if (song != null) {
                    // Mostrar un JOptionPane para ingresar el rating
                    String inputRating = JOptionPane.showInputDialog(this, "Ingrese un rating de 0 a 5 estrellas:", "Modificar Rating", JOptionPane.PLAIN_MESSAGE);

                    if (inputRating != null && !inputRating.trim().isEmpty()) {
                        try {
                            int rating = Integer.parseInt(inputRating.trim());

                            if (rating >= 0 && rating <= 5) {
                                song.addReview(rating); // Añadir la reseña y actualizar el rating
                                JOptionPane.showMessageDialog(this, "Rating actualizado a: " + song.getRating());
                                search_bar.setText("");
                                searchedSongs.setText("");
                            } else {
                                JOptionPane.showMessageDialog(this, "El rating debe estar entre 0 y 5.", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(this, "Valor de rating inválido.", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "El rating no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró ninguna canción con el código: " + code, "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Código de canción inválido.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "El código de la canción no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_reviewbotonActionPerformed

    private void allsongsbotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allsongsbotonActionPerformed
        // TODO add your handling code here
        String cancionesInfo = "Canciones guardadas: \n\n ";
    
    for (int contador = 0; contador < jtunes.getnumCanciones(); contador++) {
        Song cancion = jtunes.getCanciones()[contador];
        cancionesInfo += cancion.print();
    }
    
    JOptionPane.showMessageDialog(null, cancionesInfo, "Todas las Canciones", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_allsongsbotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JtunesMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JtunesMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JtunesMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JtunesMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Jtunes jtunes = new Jtunes(20);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JtunesMenu(jtunes).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSongboton;
    private javax.swing.JButton allsongsboton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reviewboton;
    private javax.swing.JTextField search_bar;
    private javax.swing.JTextArea searchedSongs;
    // End of variables declaration//GEN-END:variables
}
